import{a as l,j as t,bh as J}from"./main-a2_r2NC5.js";import{z as h}from"./index-mSkvzYyn.js";import{I as B}from"./view-input-DmqPPy-4.js";import{s as L}from"./utils-BkWvjRoc.js";import{B as H}from"./button-C7m1cdz4.js";import{P as T,T as b}from"./code-block-4pH2gWIb.js";import{B as G}from"./layout-CaECEKTw.js";import{H as f}from"./header-CENws30L.js";import{S as M}from"./separator-C0OyYgS-.js";const j=`jLnFTjhwFTLFDGDDvLgvDssBJBbVRNZJPPJBGzBNRVJNRB
QWmffSmMZCfWrmHlCflQWfSNBpVBNbPSbbJNppcVVzzpcp
lflrqrWMmfdMlrtWWmZgDjsqwFwhFDsngnvhqs
CNBGwsWVsdWDNCCVvfPLfQfgZHPBvpgf
qhJqJlmcFnhJclllPgZjvpHpvfZpPbLn
lpMJJhhcSMDMMwws
jphtLMfVpjJRjJscMJptssnrwdNwQrNbwNzQTbcNrwQT
gSPPSqGGGrdLrNQGrr
PvWPDvWWCSSBBZPjLVDfhjsLLsDhtR
hlLwDGLNnTrbNdtbdb
ZfsvJbsJTrsttHTR
vjPQJPFcmZjVFZFvbbVcJZJPBBhLMnDBznnGMDLMwBhlmBBl
JdTJFtwHjJTzPMqPccqzjB
rggffSCvNBCbWBWt
ZsSpnnRpLStrZpTDwTVwGTJHDLdH
sZqswsrcRpCrsCsrrbtpbpDlttlFbbpGtj
LhNgNvNNhTQMhQMWhvvhfWhllbGGPbPtlPmFlDbjHHdlmg
ffNBNMhDvQDhvzhBhNTBnSzzrZCZnrsVCSwcnrCC
hHGhjLjwtFGwGhhhhtwjtlhrDBQrRBHczRcMvsBcRrDDMH
TTfbZdZbPbVCmCdmnZmCVdfrJBczMrrznvBvQBzzzcBscn
fdbPZTVVfSdmbfdvjjSGljhhtNGGhL
fMrGQbPrbnfljjzVLQzNCzVv
WcDqlSpctSJNzSFJLCzN
hBBWcHtWgWDmZlwwrsPrRTRTMrmn
ZJTVdgpzPpLVVwZgPzTPLwgWdhcWhSQCbcSbBtSWdSWchb
qnDGnNjqDqNlqsCSWhMtlMltWSQB
NnNrFQGjDRgLrgrpPr
nCrhsmVrlrzsTvsnVvmTTlpvPJPWWMPJWWPCJMPNPgPJMjJj
ctDqBLHLRLBSBqFRDBFqFFNGgjjrGGMrWftWJPGgwfGN
HFcqZqqdcFQRQBdrlnplhspQlTmmvlph
mllQMvMTMMdNNdTzTGmLgWjBgGtBqWHhGWjHtB
PPsbbZPCVfJFJRJZsBHjjHhHcjqSSWBt
wCVJFVRJDDpCPqZlTlwQnrvzmMdmml
JfCJtCwfsffBJmFmgFmFhhdwgV
lzHzsSHvSRlDRjlHTgqVVmmVPZqqmggmqS
GzNNRTWvbWGvGQtfLnbfMbJfsC
FnPrwqrFqsPrrsrwqwnbZFPwBQMhhdBHQZhTVBMdDHVhQQVh
zlLWlLvLgtgbMdhfVDdzfd
NWRNjLmWblGFsssNnSwPsw
gnmCjzwnmCPTPhBwPjzBgqPjllJJSWlhfhQDSrpJRhDSlfJl
rLHNHrLHVNbVHMMctZFHsbcsDSDWpSDSGfSRsRWSRllfGSSG
NNtdMVrLNdZNvLvLZrzCndqBgwwPmwgjggBn
tGSBRwwStBftfBHRScHwfcrCgQgDnjQhQDqgBqgCCDnnqg
LNlbZmlPVNzWlLZVFPQqgDTQTmjqCQDQqmsQ
bpZNZLNNZlLNLZNNZbLlbLZbwrwSHGJSwrGwRtRpcjjtMttw
JvGNPWhLPLBffwhGCrbgnFDbgcZwbVnb
TqzSTlQzdHQQpTTjSddHTSnbqnZDcrrFnFVFVbVVcbhc
mlpdjhhTHWBmWWBJvG
ScrppccsbMRRvltvrvrj
HRTVTnDwDLJJJZwwVQTmNlvqBNtvWBBBQvhNfqlB
TLJdLLCJZHJCVHHTwRdcsGpSbgsczcdcgS
tffHzJctHsSHHHGTtzvttZFlZZhVjglVmgDhDdjgjS
qCBMCqbpqfQPMBPpPljQVDDZdddZdgFlDV
fWwLfbbWNzGGrzvWHJ
VnNFqrrJdfQhCDFPhttD
pGpTTzHmRTNTTLRRtbBBbzhPtbtbPPBt
HLpHpmSRHTpllcLTSgVvNrJVfJvqMnZN
tHzgwJCgzZlLFLnWJTnc
NnNnmsMnBDFSFWdqssFd
mDMBNmRRjjMNnvrPnjjRQQvfRgwpgHHpppHhZbzfCpbHtH
TTwBnnZwBnNQZZWLWTTFNFbsCGrGFCNvDDDGFj
lzPRfVVRMclPRMRcbFDjfCCGvvsdGCDd
hSmmlMlVztlhRlVbqQpLnWqSqLZZwZQT
zzVTcqmVqzdmhZJbFpQZQQtLLWLLbp
TGwvGgTnGTRHLNtMftWHNbWf
vljTGwvvlCljsgSnCBslDPPJrPdVzrSmhdqhVDPP
LzCGCGLBGNlLmFFmmSSBBqSc
ZJfbdfbWtbgVlblJtjcFcqTmFqqjtFHtjj
QgZhZgQVdlfddlWPhfvMCGRGPDMMRvDNGvND
nLdpLJSSnLMwjCDwnQhw
NZGNgmsgPtPTgWqqCGwRbrDCQbCwhMjr
gNqPTqTPttPZqcWfHLlBvccFvhpvJc
GNdGhMMvRBjmMVjM
trcZJJFmCgfZtcrQCfCZSpqSRjBQpQRQBbBqsSqR
JcTmwtTtcrmThLGDhNTThvNW
ZqhmtzzfZRsSfRmSTThMpLNgpgJQThMG
jdnvdHWFvvjFdCWFrvVVnvFDQrJJMpgMJGNLJNJTPPgQGJGR
vnHjDVHBWjdncDRbRzzzmmBsSSzt
VZNZSCPTJPpvNTNsCrbnVrLccbLnnRVfWb
MlqQBlBztFlhQJdFhccbhnRWWfnggfGc
lzJqllwQtmzdHZpvwjPPNspj
wTnCMnwQCQvTTJdfqhdtrrSmhttmmm
LZlZglZBvjgbHHSrHpbr
GWvPjPNGljBzMzJVMwNJMw
CSlChlvPPGvdddqPqSJhPdbNbcMTMTbDbcRNDFcFLMLJ
HWjgngmBZGQgRRNbFRcHbbzT
BmnpnQBBssBsQBnPptSStllGhdCGrS
nhQCnCvjchBBjMNrwbRwZvvSvSWW
qgHlfqblVbPfVqlbGgPGfdfLSdNssWWLZsNsLZsdNdLSZZ
gbGHzzbzHtPfcJhczmMnQBJn
TTGJJPPZJGRzDwtQjTjzDC
VbnrmNVWVWbffbVMsrbrnvFRjzCzQCjvQDDStDFS
MhrRfMmfMmsHgsqPLLGdBqJJGHqd
FMCMbmSQTHdCBmpFHprdHcDNqqfqJdJsDcclDDZlNf
wzwRjwwtRhnzjRBWRnvtnWtnNsfsVDlDlsqVNNNqcqVlDvqf
PtnGWjtwLBwtjCFPFpMpMbSrQm
PWzrtrtzBBfjjWGbfNWvLJLgVSjRLVlSlllLpS
HhZmHGGhGZRpQlpLpL
dTdnHCnhmhcHcntrPPGfzfrcNtPz
PfmWWWPwWdPdWPTVCdpjRnzhjDbrFnGbnQGQrrDR
LSBnZLnJBQDLRGcQGc
NHNqqBqvMMBsJgNvgsstBHNsdwwfTtwdpfTTmVmnWmtmWVlp
zjzwTHCzDzbDzNTDjzDCCHRZmmSGmfgPmZGtHtgLmf
hsqJMcQltLtPhLgL
QWWWcMsWFJssrnsWrdlcPBwNTdzwTvvBvjwpTbBzpT
LRvWZdLzzZWSqdpBzLdzLgRmbHPVHtFHMFFMCtHCfHcbVcqb
sGGjNDnGTnlSSwsrTwcFVMHwCPPPcVfVHwPM
GDQsDlJlQhSDTrpvhhWBLWvdRvWh
sWhhdhdhbHSVBbFLZLnnCmCmtTTCCV
RcQvjNrcrwGNcGNRJJmTpppgCCgppNgTtFmp
GRRRGRGclfjwRsbfHFhWBDhdFs
jfRTfgHqgDZHClcPcrGhnbcqrr
FztdMLGBzpFJpcnzzclblcnbbl
pdNBtdNLdvsNtdLpdGLTZDTgDjmvCZjCRCDDHg
bdrbdZbJtZhrMrWRHHvRHRvHllqZ
GGjCNgDVDFsCCwFNHjlrPrlSRWPcSlvl
CNVDgDwVrQggDDQVsDwNwgTQdJtbfbLhtTdtLmnfbJMntnft
mjznjLchnPPcLLnwCTFFvPgJJWdqJqJJdJJr
bMlQRzbSBbRBMlMfMBBZFrqggvVvfqdDVDVDWWFd
ZSSsRGQtSpBBpZMSbSpZsbtsjhCHTHcLCcjzjCwTTHhmNHtT
ThCHLCfVfDTtDnDppTqclFfSclNrwNPwNfFr
JmsQjJPJMWRRMddZGZWsdsMZrmcqvNSFSwrScrvwSwcccFFw
ZWdJQGGzPJsMRZBGtHLgCHTTVTLBDtgn
JVGJfttHgTLVTsnHgVHfwVBDjQDNQSjQwjbNbQjBbddS
rPvZcZpcvtzcZddmNQjWQSjDpp
rrRZPzRMztFFFqMZFtRVgnsLnVHfVHqJnghHJL
grrZZbJSggQDLgrvSSDBVsGdjHjnGnBGVsLGHj
pCtWtPtffPRcWdBsGsGRBRvhBj
zmvNNclfZJJFZQbN
DDqCgPPDgtDSPPDbgCqcmBMBTQLQZBWwQZbsMWZZMw
RNlNvpvNvndNjMZtBpwMTWLBZt
VlNJvRzdlGFRFGRRRjFVJRRggtPPHgHzgStqCcHHmHqcrc
RfmdFgbtFLHlsjRPsL
LqrhvCTvNNhWBvBTrThrDWZrPjMQPQMcjzsPcQHTlVHQjcMM
BhhrJWJLvCbfJbwgtgJn
FWpRfFRjtjFpVvbTTZFPhJhJLdCLdWBhPmHmCW
McMzNlGrgGGsHcqmdLqbhJmd
lNMwsnMzzsSSGtVVSfvZTtSppb
JrJQDJDVvGwGVwvcGCRRcCBBqsWBRZqWZZ
bNdmhvMpjmHbNbpNvmbBqlRWlCtCqlRZqRtW
HmTjNdmMfTTVvLSzvz
WMQWmfGfQfVnMGWGmGtGWHzZtdLzpZhwrtZcwZzdps
jBgljNPbNjPFRbggNlNBCcHsrLLLHlrLslhlzdhdHppp
BBPBJbFCTGJcVQMGMv
fdmfmmjbPmjlmfhfGglTNLCNvPNSpPvpvSLCPCpS
MtJwMrwrZJVHMgqJHtwVJzVVLCvpNLvDrLvQSQSNcCNpFNLS
wWMVWZzqqMRHztwJZzRqVtjGlBdhbGGbThhTlnTBTWgb
ShhrjPrvhlljnHrggPvvSqRMBZZqBTZmMmTmTMdD
ctLzbcpWCJbNWRQqBBdZFMBdfZdJBm
GQWpzLcVpVNpRggHrhhgvnGPwj
PdzSrmmqSgWWddNQds
TZbwCTLZbHLWptQHhpgNsc
MZjBLjMLDTDqrrGflsjjrf
DBHTnlGGBPjPmwRWhn
hgLgZccSrcMgLMSpCLJjNWmPWjmVWdwJjd
MfQMScQrMSprrTGHBhqTvqlGQT
CDvLRCCzQDWzcGQGvRcpVFVsgTsFrgllrTpF
mjbqtHqHbspspnMv
ZvvqdqqHvLhDhJWzJd
ThHnbRTVbQHSWvBVVBCPBW
FFJgfqfqNwNrvDCBNppP
jzsFfqwqssLzJjffJcssHQHQdnMdhTGHLbddbCnn
gwMHHhbSwnqHrgMqMbnBcldhzBLQBQhBLtLttQ
dCRmpfvpCzcQllflQz
TjPsCJmvZPNPsvZpPTTRCpprjdbrHngqDwqMrDnMbMbHgM
CgNQpgTCgNltHTNQlHpRnRnzBfJnPnmpcpfq
LGrrvGSMGvrsWPBmnJPmPfmrqr
VGsSvdJvbSHVtlttNVHT
LnZDtzpzNpPsCbfBbDCDBC
gSGRSSghqhhSvSRvvhvVqFJdsfBsCHJbVfddCJ
vglRRjQSmnQQCNrL
HwhVddVVwRcGHGjlfS
MbBvDBGvWqpNWvMbzDMNZZlLcjlSclflcjqgfCRg
bvDWDWQbspPPWWQMnGdnFnJtJFGJhhPJ
nDJDdQdPDlDJnnbRQDlTqVfFwfVtjJjjFfqqFqgN
hScrSmSCTZvZCSmZLFwfffqgjfhNGwjhfw
zCzsCCTcMBmSLmsMWHdPWRQPQPddDQ
lzGflPZLSqSlccpqjpdNCwjdsjCnCsJp
VghPQDVMFQNdJjRNBw
tVrhDVmHTlPlGrzL
gfSJJlzvGgRPpggR
VLDDHhHtlZnnZqbGmtqPmmmmWN
VVDBnddDBFFzlscC
cmmzRzcRjFrGncTHqc
ghJfwJJvqhbrdndWgddWBH
fQbSpJwSthbhtvpCwqQbsDPMNLlpRmplzPlRMPzM
bBVQDgBpTzbhpgQVhTmBVBzgrvcnrncsnZrwzHJZfnHcZfrP
tdWlFLMHGFGRGMRLNFHlfwJcrPwcsnfwcvZPfr
RLWGjHLjSjtjmBQVgpQhhg
ttRRJBrCfpprmFqSJVTSwNJNTWlVTn
nLsMghDbQdnhwWNLjcwNSlVH
ZZDgnDQvDdndPCmfrRqzvFqpmp
PPzCrcGGlnhPcsdfNZZdpLLNZsfd
RjjWHjVWDvjWqVMHjHJjVlHdwwJbLfNZdfdgfpppgpfpZw
lBVvqjQqBDBlVmCFGChhnSmTTrmr
BZnGZFvGvBGGrwLBZlzNgmzMhMdfmwgmdmmt
cpDHtVjDWjCtDTCcDNhhzNJszgzMTJhmgg
VWWcRWDpPDPPtHtScqFrLlBFFFSFBqZLSF
qBFcCGFcHHGBldzBLtdzSrdR
fpmfpswfQNQmfPHfPPgJNwRtngTtSTRzdTrLRnSnldLd
fsHNpNPwQZwhVHMFGqvvMcqWFGVF
FwFJlqDDwwgFHQdmFmSQ
pPtzcrLHZrQfdsBsdLdf
bHrrHjbrjbrJvDvbqMVNqJ
WVVpPHPfWnHmpccpnpvQcrgNNMSCTMjMgjjMMN
RsZbhRFTDDJtZFJhTLRRLMrMrCdSNCdSMjrNhjNGSQ
LLqtqqzwqmmflPTq
mmLhdZSdqhqnqMZShLQrMWcrcWQwTgrWVVWc
CCvjjsfJRCCJbDbFsbGJvzgWWGlWrWlwTQrwQGGcHlBg
NRDbRCNsNjQPSSLZNdLn
cmVLcQZPSHBGlSddBf
DFNzDNszlbBlgHNN
tWRzFjsWWtrtlDztzwjDjThLPhRMpppLMhmMhnmncRcn
LFFcgdNLpLQggZQMFMcNJggRHCHsTtRtHTzCTZHRsfSRfs
qnhlhmGrrhhnqdmGhdhWbnSRzSfsBRSTSRtBflRffzfz
PnbmrmGjWMVNvdPFLp
swcWsMMmVwWwFtWlbnnZnFBhbNfrhN
dQLZHjpDQCfBBBBTGTTC
DJvDpDSzSDQZMWsWwPqVtwcS
NVTMjjGGNBqhNttdTTjtcqjCfDlhZhSWCFFJmSmZmWJhmZ
rznsHPnRLzwspZDWfGZJSLZZDC
QzPRRvRQszQsGQcVNqTBBdVj
rHGBglBNLpbqCgFC
PbmbRnmMSbRPDWRnDVSMPMWmvvcvqqppTLZZFpvCpczLcCVv
dsdMSPtMdPnSffQwGGsBBbQw
nqjTlGPGnqWsMPPwGdGjQvQvJCCQBvmvCvQJtmCw
DDhVbDrcVVFZLzHrZBRNCWStmQWztJvtCm
VHDLhFFDpcHZcHGWfsGlspTTMqps
FTPZwBzHHFLTTSwHLJTwVQqnDrzgRRVgQpDVRprn
jJMjsWlvQqVrqgWW
CjNsjjvlmslbcJmmbtCtCThdwhHLhhhLPdBCSPFh
jfgllWfLrfmlTjsCjcjDNNDnNcHJnd
MMBRSRZGppGFpBbbBGvVnFHhcCJqNcNcHCFNgnnn
pMZZgBRVZVGRtRSMbMbvRQmTswWfzLzLzWLrPQmfwLlW
tzpdHLNpfpPnlNFHnpssbgShtqcgTTggrsqg
JZwWGCWMCcbsSHgWjq
QCmDZCJwmvZvCVCVRQGCDMFBNlfHmfLLzPPfdpfBLlPB
PCvRTdPPBVBTGgLGrGqMrMnv
twQwStrsQwstjSHmmpqZpwqNGnGnNnZgLN
mJScfjbttQjQtjcmfbbQJHFTBfdfRhhrPhhTfPVVhPPB
DMPJmLLjhJwNBCNBww
TpccnsZsbTHpsTHVszbpbGHSNwBtWlfrtCtCfrtlBlFZlf
HsHvccvzbqsGzqnnHvLQPghQNNDDvLLjdjLR
zmgVMrrjjMGbbzzdqqrgVbRTHqTTThpNHphNTvvvTNnv
QLSmZmSJTvTnZTvn
SfDtDDmQCFDwWmSrjPPGfjMjjGfMgV
hdNHNHjnGHMTcpWlhBchRBJR
fPztCTPtttLwLzVbwqSVtCBBDpWvlcRRlBpbDBQWcDWJ
ftrCVzfTCFFzTFPrPjNZFHnNsMdZgjHdss
TVcTbdqLqzHHRNHM
PppQTWffPfCPQSsCprzRwRJDzMDzNwRBRPHN
pjCTZjTjmTtsZhGcGdLvdlgv
VJRhVfJRBgbdrrrvJpJJ
cCSSHSHnZPwDFNHCDCQdbQQdvqnMsrpqQnvq
NFFCwSrDzCNrwhtgzhWtBhgzWB
RRBRczzcvmfzVRzVPvPTlCWnnlTGqGMgTTnG
tNLdSdNSMFhsFttddtjlwGqllqQglqTWqwnThT
rLSsLrNdZbbHjLdSFFMjLLtSfVRJzVJJVZcRfvZVRfDpVvRz
DBsdssbdbDfPnnqzzJbqStqzjjJS
RcGMGwwmrJjFFHPG
mCgwMLPgCPmmwWDBDZvWvBCWfZ
cJCGJJMZcMGWMhWCJTfFSfDmmgFmtshggffr
vBVQBDbNstQmFsfm
RVwHNblzwHvNdvBwNjVHGZJZLJTMLMJDZLGRMDGG
LNCssCldDbrnNtVWNQ
mmcpRBMBRBTZzgMMhtFFvrWQrQmWFtvn
MZTgzMZSzTfSMDHwCfPlLLDnwL
HlPcjMSHsMSPbgLhFPFNzP
ZfRhtVdGBNLFzLqf
DRtGGtRGJJTJDZDGdCJrVJmlWvHWcvjMsMWmhQsmCMjW
swpQcsBvvHFpBHHcCHJvJddvbbWPdzhzzqqWdhPnhP
gDDGTgjNWZTMTNjjggRLggldSPqSqGznnhnbdfnbqfhh
WDMDtDNDctVFJstJ
rFDbGjrGbpBBbrCbrwpvvZQZZhgTLVVVVLgThCTggg
NlfHpttqzltMzRSMSdWRNSfSTTmqgcLgQVcQTcmgQgmZVPVZ
HWSWpMHNpNWlpNMsMzWGGwwBvvwBnwBvsnnvnB
mZVVHmmRZlvdjvNpHh
DFBnFDtnFbBMrQbBMvFLvgtjjNpcLpJdNzJJdhWNpJNWcN
QTsbrQggBsvsgVTwRVGZCfGZfR
RGNGlGTWJnJlMcRMGqvSmnDtvDDvtLSLvr
HfsFhPPdVshfbggDVmzcvSwvStVzDq
BPPfCgCFfcBbPbHbBHZPFsbBpMGlClRNJRlQTjQWjWpTTlGT
HQNqQbbRQHbZPZQPqbZTvWFWmCjvFRvRTSrRrr
lBpBpzLLdBwsLwLLWNggzCFTCmFgWmrF
VwsswGVBfJfccLBcsJGNdpJHZZqnhtqqnhPHDZHVtPQMZn
LMHnHnPMnFdJFNFJjZvrJF
wlTlslptlwtzcvTqvTsVSWWrbJfmJZNZJjcNWfNJmf
qDlqVthTztSSpSlqtpTTzLvRRnnCvRCPLBQGDBdDGD
HlmlJgRBBpJLpPBHnlLJsrgJDMttvSdddcMSStWjjWtcSzjs
qfTbNPTVGhGFCVGTwZfNZNNVWvjSczcjStMMcdSczzczvbcW
GZVqffQTwNQTmPRlggHLprHQ
BjsWschcTjjWclQTSnZFrjtFtbzZfqntzF
qggNGMHgvHMRZMtznbrftMCn
qvHdqpwgJTsVccwscT
FJwNPHJmPHTJHglTFwgmwqtShBqDmDBzzBzWhCDWqQ
fpsjNsMVLVjDCCSzBtjztt
sLrdfbsMcbMRZZZbbsfrsrNgGNglRwllRnJnwFvnFHnG
lWWVTJlJCTTzDdWzqdtFFt
PvPvrhbjhgSjvJQSnQRbjZDZFFHMtGGqFtRMGZFtGH
rhPrSgfvJPfmwsTpLcsV`,Z=h.array(h.string()),N=Z.parse(j.split(`
`)),W="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",R=Object.fromEntries(W.split("").map((e,s)=>[e,s+1]));function D(){const[e,s]=l.useState("unstarted"),[r,n]=l.useState(0),[a,d]=l.useState(0),g=l.useCallback(async()=>{s("in-progress"),d(0),n(0);let i=0;for await(const c of N){n(o=>o+1);const v=new Set(c.slice(0,c.length/2)),w=new Set(c.slice(c.length/2,c.length)),m=v.intersection(w).values().next();if(!m.value)throw new Error("No duplicate for this row.");const p=R[m.value];if(!p)throw new Error(`No points assigned for this character: ${m.value}`);i+=p,d(i),await L(1)}s("complete")},[s,d,n]);return t.jsxs("div",{className:"mt-4 flex gap-x-4",children:[t.jsx("div",{children:t.jsx(B,{input:j})}),t.jsx("div",{children:t.jsx(H,{size:"lg",onClick:g,disabled:e==="in-progress",children:"Process Input"})}),t.jsxs("div",{className:"tabular-nums",children:[t.jsxs("div",{children:["Progress: ",r," / ",N.length]}),t.jsxs("div",{children:["Total Score: ",t.jsx("code",{children:a})]})]})]})}const F=h.array(h.string()).transform(e=>{if(e.length%3!==0)throw new Error("Number of values needs to be divisible by three.");const s=[];let r=[];return e.forEach(n=>{r.length===3&&(s.push([...r]),r=[]),r.push(n)}),s.push([...r]),s}).pipe(h.array(h.tuple([h.string(),h.string(),h.string()]))),P=F.parse(j.split(`
`)),q="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",z=Object.fromEntries(q.split("").map((e,s)=>[e,s+1]));function C(){const[e,s]=l.useState("unstarted"),[r,n]=l.useState(0),[a,d]=l.useState(0),g=l.useCallback(async()=>{s("in-progress"),d(0),n(0);let i=0;for await(const c of P){n(S=>S+1);const v=new Set(c[0]),w=new Set(c[1]),m=new Set(c[2]),p=v.intersection(w).intersection(m).values().next();if(!p.value)throw new Error("No duplicate for this row.");const o=z[p.value];if(!o)throw new Error(`No points assigned for this character: ${p.value}`);i+=o,d(i),await L(1)}s("complete")},[s,d,n]);return t.jsxs("div",{className:"mt-4 flex gap-x-4",children:[t.jsx("div",{children:t.jsx(B,{input:j})}),t.jsx("div",{children:t.jsx(H,{size:"lg",onClick:g,disabled:e==="in-progress",children:"Process Input"})}),t.jsxs("div",{className:"tabular-nums",children:[t.jsxs("div",{children:["Progress: ",r," / ",P.length]}),t.jsxs("div",{children:["Total Score: ",t.jsx("code",{children:a})]})]})]})}const O=function(){return t.jsxs(t.Fragment,{children:[t.jsx(G,{to:J.fullPath}),t.jsx(f,{hash:"part-1-prompt",children:"Part 1 – Prompt"}),t.jsxs("p",{children:["One Elf has the important job of loading all of the"," ",t.jsx("a",{href:"https://en.wikipedia.org/wiki/Rucksack",target:"_blank",children:"rucksacks"})," ","with supplies for the"," ",t.jsx("span",{title:"Where there's jungle, there's hijinxs.",children:"jungle"})," journey. Unfortunately, that Elf didn't quite follow the packing instructions, and so a few items now need to be rearranged."]}),t.jsxs("p",{children:["Each rucksack has two large ",t.jsx("em",{children:"compartments"}),". All items of a given type are meant to go into exactly one of the two compartments. The Elf that did the packing failed to follow this rule for exactly one item type per rucksack."]}),t.jsxs("p",{children:["The Elves have made a list of all of the items currently in each rucksack (your puzzle input), but they need your help finding the errors. Every item type is identified by a single lowercase or uppercase letter (that is, ",t.jsx("code",{children:"a"})," and"," ",t.jsx("code",{children:"A"})," refer to different types of items)."]}),t.jsx("p",{children:"The list of items for each rucksack is given as characters all on a single line. A given rucksack always has the same number of items in each of its two compartments, so the first half of the characters represent items in the first compartment, while the second half of the characters represent items in the second compartment."}),t.jsx("p",{children:"For example, suppose you have the following list of contents from six rucksacks:"}),t.jsx(T,{content:`vJrwpWtwJgWrhcsFMMfFFhFp
jqHRNqRjqzjGDLGLrsFMfFZSrLrFZsSL
PmmdzqPrVvPwwTWBwg
wMqvLMZHhHMvwLHjbvcjnnSBnvTQFn
ttgJtRGJQctTZtZT
CrZsJsPPZsGzwwsLwLmpwMDw`}),t.jsxs("ul",{children:[t.jsxs("li",{children:["The first rucksack contains the items ",t.jsx("code",{children:"vJrwpWtwJgWrhcsFMMfFFhFp"}),", which means its first compartment contains the items ",t.jsx("code",{children:"vJrwpWtwJgWr"}),", while the second compartment contains the items ",t.jsx("code",{children:"hcsFMMfFFhFp"}),". The only item type that appears in both compartments is lowercase"," ",t.jsx("code",{children:t.jsx("em",{children:"p"})}),"."]}),t.jsxs("li",{children:["The second rucksack's compartments contain ",t.jsx("code",{children:"jqHRNqRjqzjGDLGL"})," and"," ",t.jsx("code",{children:"rsFMfFZSrLrFZsSL"}),". The only item type that appears in both compartments is uppercase"," ",t.jsx("code",{children:t.jsx("em",{children:"L"})}),"."]}),t.jsxs("li",{children:["The third rucksack's compartments contain ",t.jsx("code",{children:"PmmdzqPrV"})," and"," ",t.jsx("code",{children:"vPwwTWBwg"}),"; the only common item type is uppercase"," ",t.jsx("code",{children:t.jsx("em",{children:"P"})}),"."]}),t.jsxs("li",{children:["The fourth rucksack's compartments only share item type"," ",t.jsx("code",{children:t.jsx("em",{children:"v"})}),"."]}),t.jsxs("li",{children:["The fifth rucksack's compartments only share item type"," ",t.jsx("code",{children:t.jsx("em",{children:"t"})}),"."]}),t.jsxs("li",{children:["The sixth rucksack's compartments only share item type"," ",t.jsx("code",{children:t.jsx("em",{children:"s"})}),"."]})]}),t.jsxs("p",{children:["To help prioritize item rearrangement, every item type can be converted to a"," ",t.jsx("em",{children:"priority"}),":"]}),t.jsxs("ul",{children:[t.jsxs("li",{children:["Lowercase item types ",t.jsx("code",{children:"a"})," through ",t.jsx("code",{children:"z"})," have priorities 1 through 26."]}),t.jsxs("li",{children:["Uppercase item types ",t.jsx("code",{children:"A"})," through ",t.jsx("code",{children:"Z"})," have priorities 27 through 52."]})]}),t.jsxs("p",{children:["In the above example, the priority of the item type that appears in both compartments of each rucksack is 16 (",t.jsx("code",{children:"p"}),"), 38 (",t.jsx("code",{children:"L"}),"), 42 (",t.jsx("code",{children:"P"}),"), 22 (",t.jsx("code",{children:"v"}),"), 20 (",t.jsx("code",{children:"t"}),"), and 19 (",t.jsx("code",{children:"s"}),"); the sum of these is"," ",t.jsx("code",{children:t.jsx("em",{children:"157"})}),"."]}),t.jsxs("p",{children:["Find the item type that appears in both compartments of each rucksack."," ",t.jsx("em",{children:"What is the sum of the priorities of those item types?"})]}),t.jsx(f,{hash:"part-1-solution",children:"Part 1 – Solution"}),t.jsx("p",{children:"Split each row in half and convert each half to a set of characters. Find the intersection of of the two halves. You'll end up with a single character, which we can easily map into the specified pointing system."}),t.jsx("p",{children:"The pointing system is a little weird, but the mapping is straightforward:"}),t.jsx(b,{content:`const characters = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
const characterToPoint = Object.fromEntries(
    characters.split("").map((character, index) => [character, index + 1])
);`}),t.jsx(D,{}),t.jsx(M,{}),t.jsx(f,{hash:"part-2-prompt",children:"Part 2 – Prompt"}),t.jsx("p",{children:"As you finish identifying the misplaced items, the Elves come to you with another issue."}),t.jsxs("p",{children:["For safety, the Elves are divided into groups of three. Every Elf carries a badge that identifies their group. For efficiency, within each group of three Elves, the badge is the ",t.jsx("em",{children:"only item type carried by all three Elves"}),". That is, if a group's badge is item type ",t.jsx("code",{children:"B"}),", then all three Elves will have item type"," ",t.jsx("code",{children:"B"})," somewhere in their rucksack, and at most two of the Elves will be carrying any other item type."]}),t.jsx("p",{children:"The problem is that someone forgot to put this year's updated authenticity sticker on the badges. All of the badges need to be pulled out of the rucksacks so the new authenticity stickers can be attached."}),t.jsxs("p",{children:["Additionally, nobody wrote down which item type corresponds to each group's badges. The only way to tell which item type is the right one is by finding the one item type that is ",t.jsx("em",{children:"common between all three Elves"})," in each group."]}),t.jsx("p",{children:"Every set of three lines in your list corresponds to a single group, but each group can have a different badge item type. So, in the above example, the first group's rucksacks are the first three lines:"}),t.jsx(T,{content:`vJrwpWtwJgWrhcsFMMfFFhFp
jqHRNqRjqzjGDLGLrsFMfFZSrLrFZsSL
PmmdzqPrVvPwwTWBwg`}),t.jsx("p",{children:"And the second group's rucksacks are the next three lines:"}),t.jsx(T,{content:`wMqvLMZHhHMvwLHjbvcjnnSBnvTQFn
ttgJtRGJQctTZtZT
CrZsJsPPZsGzwwsLwLmpwMDw`}),t.jsxs("p",{children:["In the first group, the only item type that appears in all three rucksacks is lowercase ",t.jsx("code",{children:"r"}),"; this must be their badges. In the second group, their badge item type must be ",t.jsx("code",{children:"Z"}),"."]}),t.jsxs("p",{children:["Priorities for these items must still be found to organize the sticker attachment efforts: here, they are 18 (",t.jsx("code",{children:"r"}),") for the first group and 52 (",t.jsx("code",{children:"Z"}),") for the second group. The sum of these is"," ",t.jsx("code",{children:t.jsx("em",{children:"70"})}),"."]}),t.jsxs("p",{children:["Find the item type that corresponds to the badges of each three-Elf group."," ",t.jsx("em",{children:"What is the sum of the priorities of those item types?"})]}),t.jsx(f,{hash:"part-2-solution",children:"Part 2 – Solution"}),t.jsx("p",{children:"Group the values ahead of time, turn each value into a set, and find the intersection of all three sets per group. You'll end up with a single character, which we can easily map into the specified pointing system."}),t.jsx("p",{children:"The pointing system is a little weird, but the mapping is straightforward:"}),t.jsx(b,{content:`const characters = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
const characterToPoint = Object.fromEntries(
    characters.split("").map((character, index) => [character, index + 1])
);`}),t.jsx(C,{})]})};export{O as component};
