import{a as r,j as o,bd as D}from"./main-D9G3XBrV.js";import{z as f}from"./index-mSkvzYyn.js";import{I as P}from"./view-input-FEvSyGmF.js";import{s as N}from"./utils-Lxqj250D.js";import{B as M}from"./button-l-Wcb_eN.js";import{P as s}from"./code-block-hQgQ5wpU.js";import{B as Z}from"./layout-CJ5V7MbM.js";import{H as u}from"./header-DTrf65Je.js";import{S as I}from"./separator-xl41aIvv.js";const x={1:["Q","W","P","S","Z","R","H","D"],2:["V","B","R","W","Q","H","F"],3:["C","V","S","H"],4:["H","F","G"],5:["P","G","J","B","Z"],6:["Q","T","J","H","W","F","L"],7:["Z","T","W","D","L","V","J","N"],8:["D","T","Z","C","J","G","H","F"],9:["W","P","V","M","B","H"]},j=`move 1 from 3 to 9
move 2 from 2 to 1
move 3 from 5 to 4
move 1 from 1 to 8
move 1 from 3 to 9
move 1 from 5 to 7
move 1 from 5 to 3
move 4 from 4 to 2
move 2 from 3 to 4
move 1 from 3 to 2
move 6 from 1 to 5
move 1 from 4 to 3
move 1 from 3 to 9
move 4 from 2 to 4
move 4 from 8 to 7
move 3 from 2 to 6
move 1 from 2 to 7
move 5 from 5 to 6
move 1 from 5 to 8
move 5 from 8 to 7
move 7 from 4 to 6
move 15 from 6 to 4
move 1 from 8 to 7
move 1 from 1 to 5
move 1 from 2 to 4
move 2 from 4 to 8
move 1 from 5 to 2
move 5 from 6 to 4
move 2 from 2 to 1
move 1 from 9 to 4
move 1 from 6 to 9
move 3 from 9 to 3
move 3 from 4 to 3
move 1 from 6 to 1
move 5 from 3 to 4
move 2 from 8 to 5
move 1 from 3 to 6
move 1 from 6 to 2
move 1 from 2 to 8
move 6 from 4 to 2
move 1 from 2 to 7
move 1 from 5 to 3
move 4 from 9 to 3
move 1 from 9 to 1
move 3 from 1 to 6
move 1 from 9 to 7
move 14 from 7 to 6
move 1 from 8 to 3
move 4 from 2 to 6
move 3 from 3 to 8
move 9 from 4 to 9
move 1 from 1 to 5
move 2 from 5 to 8
move 3 from 8 to 2
move 4 from 2 to 6
move 1 from 3 to 9
move 10 from 6 to 1
move 5 from 9 to 8
move 1 from 9 to 3
move 6 from 1 to 8
move 3 from 7 to 4
move 2 from 4 to 5
move 2 from 9 to 8
move 15 from 8 to 3
move 3 from 7 to 9
move 8 from 4 to 3
move 2 from 5 to 9
move 6 from 6 to 5
move 6 from 5 to 8
move 1 from 7 to 8
move 6 from 9 to 2
move 5 from 2 to 4
move 6 from 3 to 5
move 5 from 5 to 8
move 1 from 5 to 7
move 1 from 9 to 7
move 2 from 6 to 4
move 12 from 8 to 2
move 7 from 2 to 4
move 3 from 7 to 5
move 3 from 5 to 7
move 3 from 7 to 9
move 2 from 9 to 7
move 1 from 9 to 3
move 2 from 7 to 4
move 3 from 1 to 9
move 4 from 6 to 5
move 6 from 2 to 8
move 14 from 4 to 9
move 7 from 9 to 6
move 9 from 9 to 2
move 1 from 5 to 8
move 5 from 6 to 3
move 3 from 1 to 9
move 3 from 8 to 9
move 1 from 8 to 3
move 5 from 2 to 5
move 1 from 4 to 9
move 2 from 6 to 1
move 2 from 3 to 6
move 3 from 8 to 3
move 2 from 6 to 3
move 1 from 4 to 9
move 4 from 3 to 6
move 7 from 6 to 9
move 10 from 9 to 2
move 10 from 3 to 2
move 7 from 2 to 8
move 2 from 1 to 7
move 13 from 3 to 7
move 7 from 5 to 1
move 1 from 9 to 6
move 4 from 8 to 4
move 2 from 3 to 2
move 4 from 4 to 6
move 1 from 3 to 4
move 5 from 6 to 5
move 3 from 5 to 7
move 12 from 2 to 5
move 7 from 5 to 6
move 2 from 8 to 3
move 7 from 6 to 2
move 3 from 9 to 6
move 1 from 6 to 7
move 1 from 4 to 9
move 2 from 7 to 6
move 13 from 7 to 4
move 3 from 7 to 5
move 1 from 9 to 6
move 12 from 4 to 3
move 1 from 8 to 1
move 2 from 6 to 4
move 1 from 7 to 9
move 2 from 9 to 8
move 12 from 3 to 5
move 1 from 8 to 2
move 15 from 5 to 6
move 2 from 4 to 6
move 1 from 9 to 6
move 5 from 5 to 4
move 4 from 4 to 2
move 2 from 1 to 5
move 4 from 1 to 5
move 1 from 8 to 6
move 7 from 5 to 2
move 22 from 2 to 3
move 9 from 6 to 3
move 1 from 1 to 8
move 1 from 8 to 7
move 23 from 3 to 6
move 2 from 2 to 4
move 1 from 7 to 8
move 1 from 8 to 2
move 19 from 6 to 9
move 2 from 2 to 4
move 4 from 4 to 6
move 13 from 6 to 8
move 12 from 9 to 1
move 2 from 5 to 9
move 2 from 4 to 8
move 1 from 2 to 7
move 1 from 7 to 1
move 4 from 6 to 2
move 10 from 1 to 9
move 1 from 6 to 7
move 11 from 8 to 2
move 6 from 3 to 6
move 1 from 7 to 2
move 1 from 1 to 8
move 2 from 6 to 7
move 7 from 6 to 3
move 9 from 3 to 1
move 7 from 9 to 6
move 1 from 8 to 7
move 4 from 2 to 6
move 1 from 8 to 3
move 6 from 6 to 5
move 9 from 9 to 3
move 5 from 6 to 1
move 1 from 7 to 8
move 2 from 8 to 4
move 1 from 4 to 2
move 1 from 4 to 5
move 2 from 5 to 6
move 1 from 6 to 9
move 9 from 1 to 4
move 4 from 4 to 6
move 2 from 4 to 7
move 7 from 2 to 8
move 5 from 6 to 7
move 6 from 3 to 8
move 8 from 1 to 9
move 3 from 5 to 2
move 2 from 3 to 9
move 3 from 9 to 4
move 7 from 2 to 3
move 1 from 7 to 2
move 10 from 3 to 2
move 6 from 9 to 4
move 1 from 3 to 1
move 1 from 1 to 8
move 4 from 8 to 5
move 10 from 8 to 4
move 2 from 8 to 9
move 7 from 4 to 9
move 6 from 2 to 6
move 3 from 6 to 5
move 4 from 4 to 9
move 8 from 7 to 5
move 1 from 9 to 2
move 7 from 2 to 1
move 4 from 9 to 8
move 2 from 6 to 3
move 2 from 3 to 2
move 13 from 5 to 7
move 5 from 4 to 9
move 5 from 1 to 7
move 3 from 5 to 8
move 17 from 7 to 2
move 15 from 2 to 6
move 15 from 9 to 5
move 1 from 9 to 5
move 4 from 8 to 6
move 1 from 4 to 6
move 5 from 4 to 7
move 5 from 2 to 7
move 18 from 6 to 2
move 2 from 7 to 6
move 10 from 2 to 8
move 2 from 2 to 3
move 11 from 8 to 7
move 7 from 7 to 5
move 9 from 7 to 5
move 3 from 7 to 5
move 2 from 1 to 7
move 4 from 2 to 1
move 30 from 5 to 1
move 1 from 3 to 1
move 35 from 1 to 9
move 2 from 2 to 5
move 2 from 8 to 3
move 20 from 9 to 2
move 3 from 7 to 9
move 1 from 3 to 6
move 5 from 5 to 3
move 18 from 2 to 5
move 4 from 5 to 8
move 7 from 9 to 7
move 1 from 6 to 2
move 3 from 8 to 5
move 6 from 3 to 5
move 3 from 7 to 4
move 2 from 2 to 3
move 1 from 4 to 5
move 2 from 4 to 5
move 4 from 7 to 2
move 26 from 5 to 6
move 2 from 2 to 7
move 1 from 2 to 9
move 1 from 7 to 8
move 1 from 5 to 3
move 2 from 8 to 3
move 11 from 9 to 3
move 6 from 3 to 4
move 27 from 6 to 4
move 33 from 4 to 3
move 4 from 6 to 8
move 1 from 2 to 8
move 1 from 7 to 3
move 4 from 8 to 9
move 1 from 8 to 6
move 34 from 3 to 8
move 1 from 8 to 5
move 1 from 2 to 9
move 8 from 3 to 9
move 3 from 5 to 4
move 1 from 6 to 5
move 27 from 8 to 9
move 1 from 3 to 4
move 1 from 5 to 7
move 3 from 8 to 1
move 11 from 9 to 1
move 1 from 7 to 5
move 11 from 9 to 3
move 1 from 5 to 1
move 1 from 8 to 7
move 2 from 9 to 2
move 1 from 2 to 1
move 1 from 2 to 7
move 2 from 8 to 2
move 6 from 3 to 8
move 1 from 4 to 2
move 7 from 1 to 2
move 1 from 7 to 1
move 19 from 9 to 1
move 3 from 2 to 9
move 10 from 1 to 4
move 2 from 9 to 1
move 1 from 7 to 9
move 7 from 1 to 6
move 10 from 4 to 3
move 14 from 1 to 7
move 2 from 9 to 1
move 3 from 4 to 6
move 9 from 7 to 6
move 1 from 3 to 5
move 4 from 8 to 5
move 10 from 6 to 8
move 3 from 5 to 6
move 10 from 3 to 4
move 4 from 3 to 7
move 1 from 5 to 9
move 2 from 7 to 9
move 1 from 1 to 9
move 6 from 2 to 4
move 1 from 5 to 3
move 11 from 4 to 9
move 3 from 4 to 9
move 1 from 2 to 7
move 2 from 3 to 5
move 1 from 3 to 2
move 7 from 7 to 2
move 2 from 5 to 8
move 8 from 2 to 1
move 2 from 6 to 8
move 9 from 6 to 8
move 3 from 8 to 2
move 3 from 2 to 6
move 9 from 9 to 5
move 3 from 5 to 8
move 5 from 9 to 4
move 3 from 6 to 4
move 1 from 6 to 3
move 3 from 1 to 6
move 3 from 6 to 9
move 17 from 8 to 5
move 12 from 5 to 4
move 21 from 4 to 3
move 1 from 4 to 9
move 7 from 5 to 4
move 22 from 3 to 7
move 3 from 1 to 8
move 3 from 9 to 1
move 4 from 4 to 6
move 1 from 6 to 2
move 3 from 4 to 1
move 1 from 6 to 7
move 4 from 9 to 3
move 2 from 5 to 7
move 1 from 9 to 6
move 2 from 6 to 9
move 8 from 7 to 9
move 1 from 6 to 2
move 1 from 9 to 3
move 4 from 3 to 4
move 14 from 7 to 4
move 1 from 3 to 2
move 3 from 7 to 8
move 12 from 8 to 9
move 8 from 4 to 1
move 1 from 7 to 4
move 2 from 5 to 1
move 3 from 2 to 9
move 17 from 9 to 3
move 6 from 9 to 1
move 1 from 9 to 2
move 13 from 3 to 9
move 4 from 3 to 1
move 3 from 9 to 1
move 22 from 1 to 9
move 1 from 8 to 1
move 6 from 9 to 5
move 4 from 1 to 9
move 3 from 1 to 9
move 4 from 4 to 8
move 4 from 4 to 2
move 1 from 4 to 3
move 3 from 8 to 9
move 1 from 3 to 4
move 1 from 1 to 3
move 1 from 8 to 2
move 1 from 5 to 8
move 4 from 2 to 1
move 1 from 8 to 7
move 10 from 9 to 6
move 1 from 7 to 9
move 1 from 2 to 3
move 1 from 6 to 1
move 3 from 5 to 7
move 1 from 8 to 7
move 1 from 6 to 1
move 1 from 2 to 4
move 1 from 5 to 2
move 19 from 9 to 2
move 1 from 4 to 7
move 1 from 3 to 7
move 3 from 7 to 9
move 4 from 1 to 2
move 10 from 9 to 4
move 1 from 5 to 8
move 3 from 6 to 4
move 1 from 3 to 4
move 10 from 2 to 8
move 12 from 2 to 5
move 3 from 5 to 9
move 5 from 6 to 5
move 5 from 1 to 4
move 22 from 4 to 3
move 3 from 8 to 7
move 1 from 7 to 2
move 3 from 2 to 9
move 19 from 3 to 5
move 2 from 7 to 8
move 7 from 5 to 6
move 5 from 9 to 6
move 1 from 9 to 3
move 16 from 5 to 1
move 2 from 3 to 1
move 3 from 7 to 3
move 7 from 8 to 4
move 2 from 8 to 1
move 5 from 5 to 9
move 1 from 5 to 2
move 1 from 2 to 3
move 1 from 8 to 5
move 4 from 5 to 7
move 2 from 3 to 8
move 2 from 1 to 5
move 4 from 7 to 6
move 6 from 4 to 7
move 4 from 9 to 8
move 14 from 6 to 7
move 8 from 1 to 7
move 7 from 1 to 3
move 3 from 5 to 9
move 28 from 7 to 5
move 1 from 1 to 8
move 4 from 8 to 3
move 9 from 3 to 1
move 1 from 9 to 5
move 6 from 3 to 2
move 10 from 1 to 6
move 1 from 1 to 9
move 5 from 9 to 7
move 14 from 5 to 3
move 1 from 4 to 1
move 1 from 7 to 2
move 1 from 7 to 1
move 1 from 1 to 7
move 3 from 8 to 5
move 4 from 6 to 3
move 3 from 7 to 2
move 15 from 3 to 6
move 16 from 5 to 7
move 4 from 2 to 8
move 1 from 3 to 1
move 5 from 7 to 3
move 12 from 6 to 4
move 4 from 8 to 5
move 1 from 4 to 2
move 2 from 5 to 3
move 8 from 6 to 3
move 7 from 4 to 5
move 9 from 7 to 6
move 1 from 7 to 9
move 1 from 1 to 9
move 1 from 1 to 9
move 5 from 2 to 8
move 5 from 8 to 2
move 11 from 5 to 9
move 1 from 4 to 2
move 4 from 9 to 6
move 12 from 3 to 7
move 3 from 4 to 9
move 14 from 6 to 2
move 2 from 2 to 4
move 2 from 3 to 5
move 10 from 7 to 2
move 1 from 4 to 8
move 1 from 2 to 7
move 28 from 2 to 9
move 4 from 7 to 5
move 1 from 2 to 4
move 6 from 5 to 1
move 2 from 4 to 3
move 1 from 8 to 1
move 40 from 9 to 1
move 10 from 1 to 6
move 5 from 3 to 5
move 1 from 9 to 8
move 3 from 6 to 7
move 11 from 1 to 2
move 9 from 2 to 3
move 3 from 5 to 1
move 4 from 7 to 1
move 2 from 2 to 4
move 2 from 5 to 8
move 19 from 1 to 7
move 8 from 3 to 2
move 14 from 1 to 8
move 14 from 7 to 1
move 4 from 6 to 5
move 1 from 1 to 9`,T=f.array(f.string().transform(m=>{var t;return(t=m.match(/\d+/g))==null?void 0:t.map(Number)}).pipe(f.tuple([f.number(),f.number(),f.number()])).transform(m=>({move:m[0],from:m[1],to:m[2]}))),C=T.parse(j.split(`
`));function E(){const[m,t]=r.useState("unstarted"),[g,a]=r.useState(0),[n,c]=r.useState(x),b=r.useMemo(()=>Object.fromEntries(Object.entries(n).map(([e,v])=>[e,v.join(" ")])),[n]),w=r.useMemo(()=>Object.values(n).map(e=>e[e.length-1]).join(""),[n]),k=r.useCallback(async()=>{t("in-progress"),c(x),a(0);for await(const e of C)a(v=>v+1),c(v=>{const i=structuredClone(v),l=i[e.from],d=i[e.to];if(!l)throw new Error(`Invalid from value: ${e.from}`);if(!d)throw new Error(`Invalid to value: ${e.to}`);for(let h=0;h<e.move;h++){const p=l.pop();if(!p)throw new Error("No value left in this stack");d.push(p)}return i}),await N(1);t("complete")},[t,c,a]);return o.jsxs(o.Fragment,{children:[o.jsxs("div",{className:"mt-4 flex gap-x-4",children:[o.jsx("div",{children:o.jsx(P,{input:j})}),o.jsx("div",{children:o.jsx(M,{size:"lg",onClick:k,disabled:m==="in-progress",children:"Process Input"})})]}),o.jsxs("div",{className:"mt-4 tabular-nums",children:[o.jsxs("div",{children:["Progress: ",g," / ",C.length]}),o.jsxs("div",{children:["State:",o.jsx("pre",{className:"mt-0",children:o.jsx("code",{className:"w-full",children:JSON.stringify(b,null,2)})})]}),o.jsxs("div",{children:["Top of state: ",o.jsx("code",{children:w})]})]})]})}const F=f.array(f.string().transform(m=>{var t;return(t=m.match(/\d+/g))==null?void 0:t.map(Number)}).pipe(f.tuple([f.number(),f.number(),f.number()])).transform(m=>({move:m[0],from:m[1],to:m[2]}))),S=F.parse(j.split(`
`));function H(){const[m,t]=r.useState("unstarted"),[g,a]=r.useState(0),[n,c]=r.useState(x),b=r.useMemo(()=>Object.fromEntries(Object.entries(n).map(([e,v])=>[e,v.join(" ")])),[n]),w=r.useMemo(()=>Object.values(n).map(e=>e[e.length-1]).join(""),[n]),k=r.useCallback(async()=>{t("in-progress"),c(x),a(0);for await(const e of S)a(v=>v+1),c(v=>{const i=structuredClone(v),l=i[e.from],d=i[e.to];if(!l)throw new Error(`Invalid from value: ${e.from}`);if(!d)throw new Error(`Invalid to value: ${e.to}`);const h=[];for(let p=0;p<e.move;p++){const y=l.pop();if(!y)throw new Error("No value left in this stack");h.push(y)}return d.push(...h.toReversed()),i}),await N(1);t("complete")},[t,c,a]);return o.jsxs(o.Fragment,{children:[o.jsxs("div",{className:"mt-4 flex gap-x-4",children:[o.jsx("div",{children:o.jsx(P,{input:j})}),o.jsx("div",{children:o.jsx(M,{size:"lg",onClick:k,disabled:m==="in-progress",children:"Process Input"})})]}),o.jsxs("div",{className:"mt-4 tabular-nums",children:[o.jsxs("div",{children:["Progress: ",g," / ",S.length]}),o.jsxs("div",{children:["State:",o.jsx("pre",{className:"mt-0",children:o.jsx("code",{className:"w-full",children:JSON.stringify(b,null,2)})})]}),o.jsxs("div",{children:["Top of state: ",o.jsx("code",{children:w})]})]})]})}const G=function(){return o.jsxs(o.Fragment,{children:[o.jsx(Z,{to:D.fullPath}),o.jsx(u,{hash:"part-1-prompt",children:"Part 1 – Prompt"}),o.jsxs("p",{children:["The expedition can depart as soon as the final supplies have been unloaded from the ships. Supplies are stored in stacks of marked ",o.jsx("em",{children:"crates"}),", but because the needed supplies are buried under many other crates, the crates need to be rearranged."]}),o.jsxs("p",{children:["The ship has a ",o.jsx("em",{children:"giant cargo crane"})," capable of moving crates between stacks. To ensure none of the crates get crushed or fall over, the crane operator will rearrange them in a series of carefully-planned steps. After the crates are rearranged, the desired crates will be at the top of each stack."]}),o.jsxs("p",{children:["The Elves don't want to interrupt the crane operator during this delicate procedure, but they forgot to ask her ",o.jsx("em",{children:"which"})," crate will end up where, and they want to be ready to unload them as soon as possible so they can embark."]}),o.jsxs("p",{children:["They do, however, have a drawing of the starting stacks of crates ",o.jsx("em",{children:"and"})," the rearrangement procedure (your puzzle input). For example:"]}),o.jsx(s,{content:`    [D]    
[N] [C]    
[Z] [M] [P]
 1   2   3 

move 1 from 2 to 1
move 3 from 1 to 3
move 2 from 2 to 1
move 1 from 1 to 2`}),o.jsxs("p",{children:["In this example, there are three stacks of crates. Stack 1 contains two crates: crate ",o.jsx("code",{children:"Z"})," is on the bottom, and crate ",o.jsx("code",{children:"N"})," is on top. Stack 2 contains three crates; from bottom to top, they are crates ",o.jsx("code",{children:"M"}),","," ",o.jsx("code",{children:"C"}),", and ",o.jsx("code",{children:"D"}),". Finally, stack 3 contains a single crate,"," ",o.jsx("code",{children:"P"}),"."]}),o.jsx("p",{children:"Then, the rearrangement procedure is given. In each step of the procedure, a quantity of crates is moved from one stack to a different stack. In the first step of the above rearrangement procedure, one crate is moved from stack 2 to stack 1, resulting in this configuration:"}),o.jsx(s,{content:`[D]        
[N] [C]    
[Z] [M] [P]
 1   2   3 `}),o.jsxs("p",{children:["In the second step, three crates are moved from stack 1 to stack 3. Crates are moved"," ",o.jsx("em",{children:"one at a time"}),", so the first crate to be moved (",o.jsx("code",{children:"D"}),") ends up below the second and third crates:"]}),o.jsx(s,{content:`        [Z]
        [N]
    [C] [D]
    [M] [P]
 1   2   3`}),o.jsxs("p",{children:["Then, both crates are moved from stack 2 to stack 1. Again, because crates are moved"," ",o.jsx("em",{children:"one at a time"}),", crate ",o.jsx("code",{children:"C"})," ends up below crate ",o.jsx("code",{children:"M"}),":"]}),o.jsx(s,{content:`        [Z]
        [N]
[M]     [D]
[C]     [P]
 1   2   3`}),o.jsx("p",{children:"Finally, one crate is moved from stack 1 to stack 2:"}),o.jsx(s,{content:`        [Z]
        [N]
        [D]
[C] [M] [P]
 1   2   3`}),o.jsxs("p",{children:["The Elves just need to know ",o.jsx("em",{children:"which crate will end up on top of each stack"}),"; in this example, the top crates are ",o.jsx("code",{children:"C"})," in stack 1, ",o.jsx("code",{children:"M"})," in stack 2, and ",o.jsx("code",{children:"Z"})," in stack 3, so you should combine these together and give the Elves the message"," ",o.jsx("code",{children:o.jsx("em",{children:"CMZ"})}),"."]}),o.jsx("p",{children:o.jsx("em",{children:"After the rearrangement procedure completes, what crate ends up on top of each stack?"})}),o.jsx(u,{hash:"part-1-solution",children:"Part 1 – Solution"}),o.jsx(E,{}),o.jsx(I,{}),o.jsx(u,{hash:"part-2-prompt",children:"Part 2 – Prompt"}),o.jsx("p",{children:"As you watch the crane operator expertly rearrange the crates, you notice the process isn't following your prediction."}),o.jsxs("p",{children:["Some mud was covering the writing on the side of the crane, and you quickly wipe it away. The crane isn't a CrateMover 9000 - it's a"," ",o.jsx("em",{children:o.jsx("span",{title:"It's way better than the old CrateMover 1006.",children:"CrateMover 9001"})}),"."]}),o.jsxs("p",{children:["The CrateMover 9001 is notable for many new and exciting features: air conditioning, leather seats, an extra cup holder, and"," ",o.jsx("em",{children:"the ability to pick up and move multiple crates at once"}),"."]}),o.jsx("p",{children:"Again considering the example above, the crates begin in the same configuration:"}),o.jsx(s,{content:`    [D]    
[N] [C]    
[Z] [M] [P]
 1   2   3 `}),o.jsx("p",{children:"Moving a single crate from stack 2 to stack 1 behaves the same as before:"}),o.jsx(s,{content:`[D]        
[N] [C]    
[Z] [M] [P]
 1   2   3 `}),o.jsxs("p",{children:["However, the action of moving three crates from stack 1 to stack 3 means that those three moved crates ",o.jsx("em",{children:"stay in the same order"}),", resulting in this new configuration:"]}),o.jsx(s,{content:`        [D]
        [N]
    [C] [Z]
    [M] [P]
 1   2   3`}),o.jsxs("p",{children:["Next, as both crates are moved from stack 2 to stack 1, they"," ",o.jsx("em",{children:"retain their order"})," as well:"]}),o.jsx(s,{content:`        [D]
        [N]
[C]     [Z]
[M]     [P]
 1   2   3`}),o.jsxs("p",{children:["Finally, a single crate is still moved from stack 1 to stack 2, but now it's crate"," ",o.jsx("code",{children:"C"})," that gets moved:"]}),o.jsx(s,{content:`        [D]
        [N]
        [Z]
[M] [C] [P]
 1   2   3`}),o.jsxs("p",{children:["In this example, the CrateMover 9001 has put the crates in a totally different order:"," ",o.jsx("code",{children:o.jsx("em",{children:"MCD"})}),"."]}),o.jsxs("p",{children:["Before the rearrangement process finishes, update your simulation so that the Elves know where they should stand to be ready to unload the final supplies."," ",o.jsx("em",{children:"After the rearrangement procedure completes, what crate ends up on top of each stack?"})]}),o.jsx(u,{hash:"part-2-solution",children:"Part 2 – Solution"}),o.jsx(H,{})]})};export{G as component};
